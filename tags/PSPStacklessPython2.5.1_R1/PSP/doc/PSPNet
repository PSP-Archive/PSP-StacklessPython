= The pspnet module =

This module exports functions that are specific to the PSP network environment. After a connection is established through `pspnet.connectToAPCTL`, you may use all the regular functions and classes from socket and higher-level modules (asyncore/asynchat, !SocketServer...). See the following samples:

[wiki:EchoSample echo], a simple echo server listening on port 23, using asyncore and asynchat

[wiki:HTTPSample http], a HTTP server that exposes the content of the memory stick

Both these samples need the following supporting files:

{{{
#!html
<a href="/trac/chrome/site/doc/font.png">font.png</a><br />
<a href="/trac/chrome/site/doc/background.png">background.png</a>
}}}

== Classes ==

  `Error`

Exception class used by the module's functions.

== Functions ==

  `connectToAPCTL(n = 1, callback = None)`

Connects the PSP to the network using the specified configuration (starting with 1). If 'callback' is specified, it must be a callable that accepts one integer argument; it will be called on each connection state change with the new state as argument (0 through 4), and then once again with -1 as argument when the connection is established.

This function won't return until the connection is established. If the !WiFi switch on the PSP is off, it will block indefinitely. This will be addressed later, as well as a way to enumerate network configurations.

  `disconnectAPCTL()`

Disonnects the PSP.

  `getIP()`

Returns the PSP IP address as a string in dotted decimal notation. Only use when connected.

  `enumConfigs()`

Returns a list of (index, name, ipaddress) for each net configuration.
