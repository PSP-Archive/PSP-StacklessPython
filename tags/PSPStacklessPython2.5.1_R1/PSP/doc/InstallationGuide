= PSP Python Install Guide  =

== Where to get it ==

The latest binary is available from the Wiki front page. For those who want to fiddle with the source, go on reading.

== Building Python for PSP ==

I only tested the build on Linux, always using the latest PSP SDK and toolchain. First, build and install the following libraries:

 * mikmodlib
 * libpng
 * jpeg
 * zlib

These libs are in the PS2DEV Subversion repository at

svn://svn.ps2dev.org/psp/trunk

Next, build and install cpplibs, available here (Subversion repository):

http://python-psp.net/svn/trunk/cpplibs/

Finally, get the Python-PSP source here (Subversion repository):

http://python-psp.net/svn/trunk/python/

cd to python/PSP and type 'make'. It's done. Hopefully.

Windows installation will be uploaded soon...

== Running scripts ==

Once EBOOT.PBP is installed on your Memory Stick, you can run it as any homebrew. When launched, the interpreter will try to find a "script.py" file in its directory and run it; if there is none, it will exit with an error message.

== Standard modules ==

In addition to the regular built-ins and the PSP-specific modules, the following standard modules are available:

 * time
 * math
 * struct
 * binascii
 * _random
 * cStringIO
 * errno
 * thread
 * collections
 * md5
 * socket
 * select

In order to use the pure Python modules from the standard library, copy the contents of the python/Lib source directory in a directory named 'python' at the root of your memory stick. For users who don't have access to the source through Subversion, you can download the content of this directory as a psp.zip file in the [wiki:Releases] section.

== Additionnal modules ==

PSP-specific APIs are partially wrapped; for now it's better to use the higher-level API in the [wiki:PSP2d psp2d] module. The Subversion repository also includes some samples.
